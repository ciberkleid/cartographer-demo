#@ load("@ytt:data", "data")
#@ load("@ytt:json", "json")
#@ load("@ytt:regexp", "regexp")
#@ load("@ytt:base64", "base64")

#@ for i in range(len(data.values.namespaces)):
#@ if (data.values.registry.username == "_json_key"):
#@ registry_password=data.read(".ssh/gcp-service-account.json")
#@ else:
#@ registry_password = data.values.registry.password
#@ end
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
  namespace: #@ data.values.namespaces[i].name
type: kubernetes.io/dockerconfigjson
stringData:
  #@ registry_creds = {"username": data.values.registry.username, "password": registry_password}
  .dockerconfigjson: #@ json.encode({"auths": {data.values.registry.server: registry_creds}})
---
apiVersion: v1
kind: Secret
metadata:
  name: git-credentials
  namespace: #@ data.values.namespaces[i].name
  annotations:
    #! If present, remove protocol from server
    #@ hostname = regexp.replace("http(s?)://", data.values.git.server, "")
    tekton.dev/git-0: #@ hostname
type: kubernetes.io/ssh-auth
data:
  ssh-privatekey: #@ base64.encode(data.read(".ssh/id_rsa"))
  known_hosts: #@ base64.encode(data.read(".ssh/known_hosts"))
#@ end