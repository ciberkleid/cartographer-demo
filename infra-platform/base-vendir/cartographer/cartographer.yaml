apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterconfigtemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterConfigTemplate
    listKind: ClusterConfigTemplateList
    plural: clusterconfigtemplates
    singular: clusterconfigtemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                configPath:
                  type: string
                params:
                  items:
                    properties:
                      default:
                        x-kubernetes-preserve-unknown-fields: true
                      name:
                        type: string
                    required:
                      - default
                      - name
                    type: object
                  type: array
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ytt:
                  type: string
              required:
                - configPath
              type: object
            status:
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterdeliveries.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterDelivery
    listKind: ClusterDeliveryList
    plural: clusterdeliveries
    singular: clusterdelivery
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                resources:
                  items:
                    properties:
                      configs:
                        items:
                          properties:
                            name:
                              type: string
                            resource:
                              type: string
                          required:
                            - name
                            - resource
                          type: object
                        type: array
                      name:
                        type: string
                      params:
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - name
                            - value
                          type: object
                        type: array
                      sources:
                        items:
                          properties:
                            name:
                              type: string
                            resource:
                              type: string
                          required:
                            - name
                            - resource
                          type: object
                        type: array
                      templateRef:
                        properties:
                          kind:
                            enum:
                              - ClusterSourceTemplate
                              - ClusterDeploymentTemplate
                              - ClusterTemplate
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                    required:
                      - name
                      - templateRef
                    type: object
                  type: array
                selector:
                  additionalProperties:
                    type: string
                  type: object
              required:
                - resources
                - selector
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterdeploymenttemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterDeploymentTemplate
    listKind: ClusterDeploymentTemplateList
    plural: clusterdeploymenttemplates
    singular: clusterdeploymenttemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                observedCompletion:
                  properties:
                    failed:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      required:
                        - key
                        - value
                      type: object
                    succeeded:
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      required:
                        - key
                        - value
                      type: object
                  required:
                    - succeeded
                  type: object
                observedMatches:
                  items:
                    properties:
                      input:
                        type: string
                      output:
                        type: string
                    required:
                      - input
                      - output
                    type: object
                  type: array
                params:
                  items:
                    properties:
                      default:
                        x-kubernetes-preserve-unknown-fields: true
                      name:
                        type: string
                    required:
                      - default
                      - name
                    type: object
                  type: array
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ytt:
                  type: string
              type: object
            status:
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterimagetemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterImageTemplate
    listKind: ClusterImageTemplateList
    plural: clusterimagetemplates
    singular: clusterimagetemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                imagePath:
                  type: string
                params:
                  items:
                    properties:
                      default:
                        x-kubernetes-preserve-unknown-fields: true
                      name:
                        type: string
                    required:
                      - default
                      - name
                    type: object
                  type: array
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ytt:
                  type: string
              required:
                - imagePath
              type: object
            status:
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clusterruntemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterRunTemplate
    listKind: ClusterRunTemplateList
    plural: clusterruntemplates
    singular: clusterruntemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                outputs:
                  additionalProperties:
                    type: string
                  type: object
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - template
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clustersourcetemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterSourceTemplate
    listKind: ClusterSourceTemplateList
    plural: clustersourcetemplates
    singular: clustersourcetemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                params:
                  items:
                    properties:
                      default:
                        x-kubernetes-preserve-unknown-fields: true
                      name:
                        type: string
                    required:
                      - default
                      - name
                    type: object
                  type: array
                revisionPath:
                  type: string
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                urlPath:
                  type: string
                ytt:
                  type: string
              required:
                - revisionPath
                - urlPath
              type: object
            status:
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clustersupplychains.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterSupplyChain
    listKind: ClusterSupplyChainList
    plural: clustersupplychains
    singular: clustersupplychain
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                resources:
                  items:
                    properties:
                      configs:
                        items:
                          properties:
                            name:
                              type: string
                            resource:
                              type: string
                          required:
                            - name
                            - resource
                          type: object
                        type: array
                      images:
                        items:
                          properties:
                            name:
                              type: string
                            resource:
                              type: string
                          required:
                            - name
                            - resource
                          type: object
                        type: array
                      name:
                        type: string
                      params:
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - name
                            - value
                          type: object
                        type: array
                      sources:
                        items:
                          properties:
                            name:
                              type: string
                            resource:
                              type: string
                          required:
                            - name
                            - resource
                          type: object
                        type: array
                      templateRef:
                        properties:
                          kind:
                            enum:
                              - ClusterSourceTemplate
                              - ClusterImageTemplate
                              - ClusterTemplate
                              - ClusterConfigTemplate
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                    required:
                      - name
                      - templateRef
                    type: object
                  type: array
                selector:
                  additionalProperties:
                    type: string
                  type: object
              required:
                - resources
                - selector
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: clustertemplates.carto.run
spec:
  group: carto.run
  names:
    kind: ClusterTemplate
    listKind: ClusterTemplateList
    plural: clustertemplates
    singular: clustertemplate
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                params:
                  items:
                    properties:
                      default:
                        x-kubernetes-preserve-unknown-fields: true
                      name:
                        type: string
                    required:
                      - default
                      - name
                    type: object
                  type: array
                template:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                ytt:
                  type: string
              type: object
            status:
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: deliverables.carto.run
spec:
  group: carto.run
  names:
    kind: Deliverable
    listKind: DeliverableList
    plural: deliverables
    singular: deliverable
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                params:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - name
                      - value
                    type: object
                  type: array
                source:
                  properties:
                    git:
                      properties:
                        ref:
                          properties:
                            branch:
                              type: string
                            commit:
                              type: string
                            tag:
                              type: string
                          type: object
                        url:
                          type: string
                      type: object
                    image:
                      description: Image is an OCI image is a registry that contains source code
                      type: string
                    subPath:
                      type: string
                  type: object
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                deliveryRef:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
                observedGeneration:
                  format: int64
                  type: integer
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: runnables.carto.run
spec:
  group: carto.run
  names:
    kind: Runnable
    listKind: RunnableList
    plural: runnables
    singular: runnable
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                inputs:
                  additionalProperties:
                    x-kubernetes-preserve-unknown-fields: true
                  type: object
                runTemplateRef:
                  properties:
                    kind:
                      type: string
                    name:
                      minLength: 1
                      type: string
                  required:
                    - name
                  type: object
                selector:
                  properties:
                    matchingLabels:
                      additionalProperties:
                        type: string
                      type: object
                    resource:
                      properties:
                        apiVersion:
                          type: string
                        kind:
                          type: string
                      type: object
                  required:
                    - matchingLabels
                    - resource
                  type: object
              required:
                - runTemplateRef
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                outputs:
                  additionalProperties:
                    x-kubernetes-preserve-unknown-fields: true
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: workloads.carto.run
spec:
  group: carto.run
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                env:
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                image:
                  description: Image is a pre-built image in a registry. It is an alternative to defining source code.
                  type: string
                params:
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - name
                      - value
                    type: object
                  type: array
                resources:
                  description: ResourceRequirements describes the compute resource requirements.
                  properties:
                    limits:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                          - type: integer
                          - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                  type: object
                serviceClaims:
                  items:
                    properties:
                      name:
                        type: string
                      ref:
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                        required:
                          - apiVersion
                          - kind
                          - name
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                source:
                  properties:
                    git:
                      properties:
                        ref:
                          properties:
                            branch:
                              type: string
                            commit:
                              type: string
                            tag:
                              type: string
                          type: object
                        url:
                          type: string
                      type: object
                    image:
                      description: Image is an OCI image is a registry that contains source code
                      type: string
                    subPath:
                      type: string
                  type: object
              type: object
            status:
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  format: int64
                  type: integer
                supplyChainRef:
                  properties:
                    apiVersion:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: Secret
metadata:
  name: private-registry-credentials
  namespace: cartographer-system
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartographer-controller
  namespace: cartographer-system
spec:
  selector:
    matchLabels:
      app: cartographer-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: cartographer-controller
    spec:
      serviceAccount: cartographer-controller
      imagePullSecrets:
        - name: private-registry-credentials
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: cartographer-webhook
      containers:
        - name: cartographer-controller
          image: projectcartographer/cartographer@sha256:134bebc68e679fbbd7ddc13f3be4429e84aca29eb45193c3d6e57648edcd9e57
          args:
            - -cert-dir=/cert
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - all
          volumeMounts:
            - mountPath: /cert
              name: cert
              readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cartographer-controller
  namespace: cartographer-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cartographer-cluster-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: cartographer-controller
    namespace: cartographer-system
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: deliveryvalidator
  annotations:
    cert-manager.io/inject-ca-from: cartographer-system/cartographer-webhook
webhooks:
  - name: delivery-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clusterdeliveries
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clusterdelivery
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
  - name: deployment-template-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clusterdeploymenttemplates
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clusterdeploymenttemplate
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: clustersupplychainvalidator
  annotations:
    cert-manager.io/inject-ca-from: cartographer-system/cartographer-webhook
webhooks:
  - name: supply-chain-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clustersupplychains
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clustersupplychain
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
  - name: config-template-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clusterconfigtemplates
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clusterconfigtemplate
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
  - name: image-template-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clusterimagetemplates
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clusterimagetemplate
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
  - name: source-template-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clustersourcetemplates
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clustersourcetemplate
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
  - name: template-validator.cartographer.com
    rules:
      - operations:
          - CREATE
          - UPDATE
        apiGroups:
          - carto.run
        apiVersions:
          - v1alpha1
        resources:
          - clustertemplates
        scope: Cluster
    clientConfig:
      service:
        name: cartographer-webhook
        namespace: cartographer-system
        path: /validate-carto-run-v1alpha1-clustertemplate
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cartographer-webhook
  namespace: cartographer-system
spec:
  commonName: cartographer-webhook.cartographer-system.svc
  dnsNames:
    - cartographer-webhook.cartographer-system.svc
    - cartographer-webhook.cartographer-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer
  secretName: cartographer-webhook
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: cartographer-system
spec:
  selfSigned: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cartographer-webhook
  namespace: cartographer-system
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app: cartographer-controller
---
kind: Secret
apiVersion: v1
metadata:
  name: cartographer-webhook
  namespace: cartographer-system
type: Opaque

---
